import { Injectable } from '@angular/core';
import { DataService } from 'app/shared/service.helper';
import {Headers} from '@angular/http';
import { Appconstants } from 'app/app.constant';
import { BaseApiClass } from 'app/shared/api.base';

@Injectable()
export class HierachyService {
  baseApi: BaseApiClass;

  constructor(private dataService: DataService) {

  }

  saveorUpdateHierachyLevel(hierachyLevelForm) {
    const url = Appconstants.API_PRODUCT + Appconstants.HIER_SAVE_UPDATE;
    const headers = new Headers();
    headers.append('Content-Type', 'application/json');
    return new Promise(resolve => {
      this.dataService.requestPost(url, hierachyLevelForm, headers).subscribe((res) => {
        this.baseApi = res;
        if (this.baseApi.serviceResponseCode == Appconstants.SUCCESS_RESPONSE_CODE) {
        } else {
        }
        resolve(this.baseApi);
      });
    });

  }
  getHierachyLevel(hierachyLevelForm) {
    const url = Appconstants.API_PRODUCT + Appconstants.GET_HIER;
    const headers = new Headers();
    headers.append('Content-Type', 'application/json');
    return new Promise(resolve => {
      this.dataService.requestPost(url, hierachyLevelForm, headers).subscribe((res) => {
        this.baseApi = res;
        if (this.baseApi.serviceResponseCode == Appconstants.SUCCESS_RESPONSE_CODE) {
        } else {
        }
        resolve(this.baseApi);
      });
    });

  }
  getHierachyLevelDetails(hierachyLevelDetailForm) {
    const url = Appconstants.API_PRODUCT + Appconstants.GET_HIER_LEVEL;
    const headers = new Headers();
    headers.append('Content-Type', 'application/json');
    return new Promise(resolve => {
      this.dataService.requestPost(url, hierachyLevelDetailForm, headers).subscribe((res) => {
        this.baseApi = res;
        if (this.baseApi.serviceResponseCode == Appconstants.SUCCESS_RESPONSE_CODE) {
        } else {
        }
        resolve(this.baseApi);
      });
    });

  }
  saveorUpdateHierachyLevelDetail(hierachyLevelDetailForm) {
    const url = Appconstants.API_PRODUCT + Appconstants.HIER_LEVEL_SAVE_UPDATE;
    const headers = new Headers();
    headers.append('Content-Type', 'application/json');
    return new Promise(resolve => {
      this.dataService.requestPost(url, hierachyLevelDetailForm, headers).subscribe((res) => {
        this.baseApi = res;
        if (this.baseApi.serviceResponseCode == Appconstants.SUCCESS_RESPONSE_CODE) {
        } else {
        }
        resolve(this.baseApi);
      });
    });

  }
  getParentHierachyDetails(hierachyLevelDetailForm) {
    const url = Appconstants.API_PRODUCT + Appconstants.GET_PARENT_HIERACHY;
    const headers = new Headers();
    headers.append('Content-Type', 'application/json');
    return new Promise(resolve => {
      this.dataService.requestPost(url, hierachyLevelDetailForm, headers).subscribe((res) => {
        this.baseApi = res;
        if (this.baseApi.serviceResponseCode == Appconstants.SUCCESS_RESPONSE_CODE) {
        } else {
        }
        resolve(this.baseApi);
      });
    });

  }
  getTreeDetails(hierachyLevelDetailForm) {
    const url = Appconstants.API_PRODUCT + Appconstants.GET_TREE;
    const headers = new Headers();
    headers.append('Content-Type', 'application/json');
    return new Promise(resolve => {
      this.dataService.requestPost(url, hierachyLevelDetailForm, headers).subscribe((res) => {
        this.baseApi = res;
        if (this.baseApi.serviceResponseCode == Appconstants.SUCCESS_RESPONSE_CODE) {
        } else {
        }
        resolve(this.baseApi);
      });
    });

  }

}
